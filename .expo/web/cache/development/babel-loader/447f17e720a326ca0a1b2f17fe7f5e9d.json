{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\ameed\\\\Desktop\\\\customtabbar-main\\\\Screens\\\\Income.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nvar data = [{\n  key: \"A\"\n}, {\n  key: \"B\"\n}, {\n  key: \"C\"\n}, {\n  key: \"D\"\n}, {\n  key: \"E\"\n}, {\n  key: \"F\"\n}, {\n  key: \"G\"\n}, {\n  key: \"H\"\n}, {\n  key: \"I\"\n}, {\n  key: \"J\"\n}, {\n  key: \"K\"\n}, {\n  key: \"L\"\n}, {\n  key: \"I\"\n}, {\n  key: \"J\"\n}, {\n  key: \"K\"\n}, {\n  key: \"L\"\n}];\n\nvar formatData = function formatData(data, numColumns) {\n  var numberOfFullRows = Math.floor(data.length / numColumns);\n  var numberOfElementsLastRow = data.length - numberOfFullRows * numColumns;\n\n  while (numberOfElementsLastRow !== numColumns && numberOfElementsLastRow !== 0) {\n    data.push({\n      key: \"blank-\" + numberOfElementsLastRow,\n      empty: true\n    });\n    numberOfElementsLastRow++;\n  }\n\n  return data;\n};\n\nvar numColumns = 4;\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.renderItem = function (_ref) {\n      var item = _ref.item,\n          index = _ref.index;\n\n      if (item.empty === true) {\n        return React.createElement(View, {\n          style: [styles.item, styles.itemInvisible],\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 14\n          }\n        });\n      }\n\n      return React.createElement(View, {\n        style: styles.item,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.itemText,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }\n      }, item.key));\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(FlatList, {\n        data: formatData(data, numColumns),\n        style: styles.container,\n        renderItem: this.renderItem,\n        numColumns: numColumns,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginVertical: 20,\n    backgroundColor: \"#000\"\n  },\n  item: {\n    backgroundColor: \"#79b6b8\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flex: 1,\n    margin: 1,\n    height: Dimensions.get(\"window\").width / numColumns\n  },\n  itemInvisible: {\n    backgroundColor: \"transparent\"\n  },\n  itemText: {\n    color: \"#fff\"\n  }\n});","map":{"version":3,"sources":["C:/Users/ameed/Desktop/customtabbar-main/Screens/Income.js"],"names":["React","data","key","formatData","numColumns","numberOfFullRows","Math","floor","length","numberOfElementsLastRow","push","empty","App","renderItem","item","index","styles","itemInvisible","itemText","container","Component","StyleSheet","create","flex","marginVertical","backgroundColor","alignItems","justifyContent","margin","height","Dimensions","get","width","color"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { StyleSheet, Text, View, FlatList, Dimensions } from \"react-native\";\r\n\r\nconst data = [\r\n  { key: \"A\" },\r\n  { key: \"B\" },\r\n  { key: \"C\" },\r\n  { key: \"D\" },\r\n  { key: \"E\" },\r\n  { key: \"F\" },\r\n  { key: \"G\" },\r\n  { key: \"H\" },\r\n  { key: \"I\" },\r\n  { key: \"J\" },\r\n  { key: \"K\" },\r\n  { key: \"L\" },\r\n  { key: \"I\" },\r\n  { key: \"J\" },\r\n  { key: \"K\" },\r\n  { key: \"L\" },\r\n];\r\n\r\nconst formatData = (data, numColumns) => {\r\n  const numberOfFullRows = Math.floor(data.length / numColumns);\r\n\r\n  let numberOfElementsLastRow = data.length - numberOfFullRows * numColumns;\r\n  while (\r\n    numberOfElementsLastRow !== numColumns &&\r\n    numberOfElementsLastRow !== 0\r\n  ) {\r\n    data.push({ key: `blank-${numberOfElementsLastRow}`, empty: true });\r\n    numberOfElementsLastRow++;\r\n  }\r\n\r\n  return data;\r\n};\r\n\r\nconst numColumns = 4;\r\nexport default class App extends React.Component {\r\n  renderItem = ({ item, index }) => {\r\n    if (item.empty === true) {\r\n      return <View style={[styles.item, styles.itemInvisible]} />;\r\n    }\r\n    return (\r\n      <View style={styles.item}>\r\n        <Text style={styles.itemText}>{item.key}</Text>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <FlatList\r\n        data={formatData(data, numColumns)}\r\n        style={styles.container}\r\n        renderItem={this.renderItem}\r\n        numColumns={numColumns}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    marginVertical: 20,\r\n    backgroundColor: \"#000\",\r\n    // alignItems: \"center\",\r\n    // justifyContent: \"center\",\r\n  },\r\n  item: {\r\n    backgroundColor: \"#79b6b8\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flex: 1,\r\n    margin: 1,\r\n    height: Dimensions.get(\"window\").width / numColumns, // approximate a square\r\n  },\r\n  itemInvisible: {\r\n    backgroundColor: \"transparent\",\r\n  },\r\n  itemText: {\r\n    color: \"#fff\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}