{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\ameed\\\\Desktop\\\\customtabbar-main\\\\components\\\\Calculator.js\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { TextInput } from \"react-native-gesture-handler\";\nimport Icon from \"@expo/vector-icons/Entypo\";\nimport { Feather, FontAwesome5, Ionicons } from \"@expo/vector-icons\";\n\nfunction Calculator(props) {\n  var _this = this;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      darkMode = _useState2[0],\n      setDarkMode = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentNumber = _useState4[0],\n      setCurrentNumber = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      lastNumber = _useState6[0],\n      setLastNumber = _useState6[1];\n\n  var buttons = [\"C\", \"B\", \"/\", 7, 8, 9, \"*\", 4, 5, 6, \"-\", 1, 2, 3, \"+\", 0, \"DEL\", \"=\"];\n  var styles = StyleSheet.create({\n    AllScreenAboveCalculator: {\n      backgroundColor: darkMode ? \"#3f4d5b\" : \"#fff\",\n      maxWidth: \"100%\",\n      minHeight: \"40%\",\n      alignItems: \"flex-end\",\n      justifyContent: \"flex-end\"\n    },\n    ResultTextBox: {\n      backgroundColor: \"#70b6b8\",\n      color: darkMode ? \"#fff\" : \"#fff\",\n      width: \"75%\",\n      height: \"20%\",\n      fontSize: 39,\n      alignSelf: \"center\",\n      justifyContent: \"center\",\n      borderRadius: 20,\n      bottom: \"33%\"\n    },\n    TextBoxIconsStyle: {\n      color: darkMode ? \"#fff\" : \"#fff\"\n    },\n    ChangeThemIcon: {\n      alignSelf: \"flex-start\",\n      bottom: \"50%\",\n      backgroundColor: darkMode ? \"#7b8084\" : \"#e5e5e5\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      width: \"20%\",\n      height: \"15%\",\n      borderRadius: 10\n    },\n    buttons: {\n      width: \"100%\",\n      height: \"29%\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\"\n    },\n    button: {\n      borderColor: darkMode ? \"#3f4d5b\" : \"#70b6b8\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      minWidth: \"24%\",\n      minHeight: \"54%\",\n      flex: 2\n    },\n    textButton: {\n      color: darkMode ? \"#ffffff\" : \"#000000\",\n      fontSize: 26\n    }\n  });\n\n  var handleInput = function handleInput(btnPressed) {\n    if (btnPressed === \"+\" || btnPressed === \"-\" || btnPressed === \"*\" || btnPressed === \"/\") {\n      setCurrentNumber(currentNumber + btnPressed);\n      return;\n    }\n\n    switch (btnPressed) {\n      case \"DEL\":\n        setCurrentNumber(currentNumber.substring(0, currentNumber.length - 1));\n        return;\n\n      case \"C\":\n        setLastNumber(\"\");\n        setCurrentNumber(\"\");\n        return;\n\n      case \"=\":\n        setLastNumber(currentNumber + \"=\");\n        calculate();\n\n      case \"CHOOSE CATEGORY\":\n        return;\n    }\n\n    setCurrentNumber(currentNumber + btnPressed);\n  };\n\n  var calculate = function calculate() {\n    var lastArr = currentNumber[currentNumber.length - 1];\n\n    if (lastArr === \"/\" || lastArr === \"*\" || lastArr === \"-\" || lastArr === \"+\" || lastArr === \".\") {\n      setCurrentNumber(currentNumber);\n    } else {\n      var result = eval(currentNumber).toString();\n      setCurrentNumber(result);\n      return;\n    }\n  };\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.AllScreenAboveCalculator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.ChangeThemIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, React.createElement(Icon, {\n    name: darkMode ? \"light-up\" : \"moon\",\n    size: 24,\n    color: darkMode ? \"white\" : \"black\",\n    onPress: function onPress() {\n      return darkMode ? setDarkMode(false) : setDarkMode(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  })), React.createElement(Text, {\n    style: styles.ResultTextBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, React.createElement(FontAwesome5, {\n    name: \"coins\",\n    size: 24,\n    style: styles.TextBoxIconsStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }), currentNumber, \" \", React.createElement(Feather, {\n    name: \"delete\",\n    size: 36,\n    style: styles.TextBoxIconsStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }))), React.createElement(View, {\n    style: styles.buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }, buttons.map(function (btn) {\n    return btn === \"=\" || btn === \"/\" || btn === \"*\" || btn === \"-\" || btn === \"+\" ? React.createElement(TouchableOpacity, {\n      key: btn,\n      style: [styles.button, {\n        backgroundColor: \"#70b6b8\"\n      }],\n      onPress: function onPress() {\n        return handleInput(btn);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: [styles.textButton, {\n        color: \"white\",\n        fontSize: 28\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 15\n      }\n    }, btn)) : btn === 0 ? React.createElement(TouchableOpacity, {\n      key: btn,\n      style: [styles.button, {\n        backgroundColor: typeof btn === \"number\" ? darkMode ? \"#303946\" : \"#fff\" : darkMode === true ? \"#414853\" : \"#ededed\",\n        minWidth: \"36%\"\n      }],\n      onPress: function onPress() {\n        return handleInput(btn);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: styles.textButton,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 15\n      }\n    }, btn)) : btn === \"B\" || btn === \"DEL\" ? React.createElement(TouchableOpacity, {\n      key: btn,\n      style: [styles.button, {\n        backgroundColor: btn === \".\" ? darkMode ? \"#303946\" : \"#fff\" : darkMode === true ? \"#414853\" : \"#ededed\",\n        minWidth: \"37%\"\n      }],\n      onPress: function onPress() {\n        return handleInput(btn);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: styles.textButton,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 15\n      }\n    }, btn)) : btn === \"C\" ? React.createElement(TouchableOpacity, {\n      key: btn,\n      style: [styles.button, {\n        backgroundColor: typeof btn === \"number\" ? darkMode ? \"#303946\" : \"#fff\" : darkMode === true ? \"#414853\" : \"#ededed\",\n        minWidth: \"36%\"\n      }],\n      onPress: function onPress() {\n        return handleInput(btn);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: styles.textButton,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 15\n      }\n    }, btn)) : React.createElement(TouchableOpacity, {\n      key: btn,\n      style: [styles.button, {\n        backgroundColor: typeof btn === \"number\" ? darkMode ? \"#303946\" : \"#fff\" : darkMode === true ? \"#414853\" : \"#ededed\"\n      }],\n      onPress: function onPress() {\n        return handleInput(btn);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: styles.textButton,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 15\n      }\n    }, btn));\n  })));\n}\n\nexport default Calculator;","map":{"version":3,"sources":["C:/Users/ameed/Desktop/customtabbar-main/components/Calculator.js"],"names":["React","useState","TextInput","Icon","Feather","FontAwesome5","Ionicons","Calculator","props","darkMode","setDarkMode","currentNumber","setCurrentNumber","lastNumber","setLastNumber","buttons","styles","StyleSheet","create","AllScreenAboveCalculator","backgroundColor","maxWidth","minHeight","alignItems","justifyContent","ResultTextBox","color","width","height","fontSize","alignSelf","borderRadius","bottom","TextBoxIconsStyle","ChangeThemIcon","flexDirection","flexWrap","button","borderColor","minWidth","flex","textButton","handleInput","btnPressed","substring","length","calculate","lastArr","result","eval","toString","map","btn"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { StyleSheet, View, Text, TouchableOpacity } from \"react-native\";\r\nimport { TextInput } from \"react-native-gesture-handler\";\r\nimport Icon from \"react-native-vector-icons/Entypo\";\r\nimport { Feather, FontAwesome5, Ionicons } from \"@expo/vector-icons\";\r\n\r\n// import { COLORS, FONTS, SIZES } from \"../Constant/Thems\";\r\n// import icons from \"../Constant/icons\";\r\n// import CategoriesList from \"./Income\";\r\n\r\nfunction Calculator(props) {\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const [currentNumber, setCurrentNumber] = useState(\"\");\r\n  const [lastNumber, setLastNumber] = useState(\"\");\r\n  const buttons = [\r\n    \"C\",\r\n    \"B\",\r\n    \"/\",\r\n    7,\r\n    8,\r\n    9,\r\n    \"*\",\r\n    4,\r\n    5,\r\n    6,\r\n    \"-\",\r\n    1,\r\n    2,\r\n    3,\r\n    \"+\",\r\n    0,\r\n    \"DEL\",\r\n    \"=\",\r\n  ];\r\n\r\n  const styles = StyleSheet.create({\r\n    AllScreenAboveCalculator: {\r\n      backgroundColor: darkMode ? \"#3f4d5b\" : \"#fff\",\r\n      maxWidth: \"100%\",\r\n      minHeight: \"40%\",\r\n      alignItems: \"flex-end\",\r\n      justifyContent: \"flex-end\",\r\n    },\r\n    ResultTextBox: {\r\n      backgroundColor: \"#70b6b8\",\r\n      color: darkMode ? \"#fff\" : \"#fff\",\r\n      width: \"75%\",\r\n      height: \"20%\",\r\n      fontSize: 39,\r\n      alignSelf: \"center\",\r\n      justifyContent: \"center\",\r\n      borderRadius: 20,\r\n      bottom: \"33%\",\r\n    },\r\n    TextBoxIconsStyle: {\r\n      color: darkMode ? \"#fff\" : \"#fff\",\r\n    },\r\n    // resultText: {\r\n    //   //Red Line what you write\r\n    //   maxHeight: 45,\r\n    //   color: \"#000\", // \"#70b6b8\", ////// Our Color\r\n    //   backgroundColor: \"#70b6b8\",\r\n    //   margin: 15,\r\n    //   fontSize: 35,\r\n    // },\r\n\r\n    // historyText: {\r\n    //   // Line of iterations (Displaye the Results)\r\n    //   color: darkMode ? \"#B5B7BB\" : \"#7c7c7c\",\r\n    //   fontSize: 20,\r\n    //   marginRight: 10,\r\n    //   alignSelf: \"flex-end\",\r\n    // },\r\n    ChangeThemIcon: {\r\n      // Dark & Light theme Icon\r\n      alignSelf: \"flex-start\",\r\n      bottom: \"50%\",\r\n      backgroundColor: darkMode ? \"#7b8084\" : \"#e5e5e5\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      width: \"20%\",\r\n      height: \"15%\",\r\n      borderRadius: 10,\r\n    },\r\n    // Out of Result\r\n    buttons: {\r\n      //buttuons\r\n      width: \"100%\",\r\n      height: \"29%\",\r\n      flexDirection: \"row\",\r\n      flexWrap: \"wrap\",\r\n    },\r\n    button: {\r\n      // All Buttons Without Operations buttons (/ + - * =)\r\n      borderColor: darkMode ? \"#3f4d5b\" : \"#70b6b8\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      minWidth: \"24%\",\r\n      minHeight: \"54%\",\r\n      flex: 2,\r\n    },\r\n    textButton: {\r\n      //White Standerd Buttons All Buttons without Operations Buttons\r\n      // Numers (1 - 9)\r\n      color: darkMode ? \"#ffffff\" : \"#000000\",\r\n      fontSize: 26,\r\n    },\r\n  });\r\n\r\n  const handleInput = (btnPressed) => {\r\n    if (\r\n      btnPressed === \"+\" ||\r\n      btnPressed === \"-\" ||\r\n      btnPressed === \"*\" ||\r\n      btnPressed === \"/\"\r\n    ) {\r\n      setCurrentNumber(currentNumber + btnPressed);\r\n      return;\r\n    }\r\n\r\n    switch (btnPressed) {\r\n      case \"DEL\":\r\n        setCurrentNumber(currentNumber.substring(0, currentNumber.length - 1));\r\n        return;\r\n      case \"C\":\r\n        setLastNumber(\"\");\r\n        setCurrentNumber(\"\");\r\n        return;\r\n      case \"=\":\r\n        setLastNumber(currentNumber + \"=\");\r\n        calculate();\r\n      case \"CHOOSE CATEGORY\":\r\n        return;\r\n    }\r\n    setCurrentNumber(currentNumber + btnPressed);\r\n  };\r\n\r\n  const calculate = () => {\r\n    let lastArr = currentNumber[currentNumber.length - 1];\r\n    if (\r\n      lastArr === \"/\" ||\r\n      lastArr === \"*\" ||\r\n      lastArr === \"-\" ||\r\n      lastArr === \"+\" ||\r\n      lastArr === \".\"\r\n    ) {\r\n      setCurrentNumber(currentNumber);\r\n    } else {\r\n      let result = eval(currentNumber).toString();\r\n      setCurrentNumber(result);\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <View style={styles.AllScreenAboveCalculator}>\r\n        <TouchableOpacity style={styles.ChangeThemIcon}>\r\n          <Icon\r\n            name={darkMode ? \"light-up\" : \"moon\"}\r\n            size={24}\r\n            color={darkMode ? \"white\" : \"black\"}\r\n            onPress={() => (darkMode ? setDarkMode(false) : setDarkMode(true))}\r\n          />\r\n        </TouchableOpacity>\r\n\r\n        <Text style={styles.ResultTextBox}>\r\n          <FontAwesome5\r\n            name=\"coins\"\r\n            size={24}\r\n            style={styles.TextBoxIconsStyle}\r\n          />\r\n          {currentNumber}{\" \"}\r\n          <Feather name=\"delete\" size={36} style={styles.TextBoxIconsStyle} />\r\n        </Text>\r\n\r\n        {/* <Text style={styles.historyText}></Text> */}\r\n        {/* <Text style={styles.resultText}></Text> */}\r\n      </View>\r\n      <View style={styles.buttons}>\r\n        {buttons.map((btn) =>\r\n          btn === \"=\" ||\r\n          btn === \"/\" ||\r\n          btn === \"*\" ||\r\n          btn === \"-\" ||\r\n          btn === \"+\" ? (\r\n            <TouchableOpacity\r\n              key={btn}\r\n              style={[styles.button, { backgroundColor: \"#70b6b8\" }]}\r\n              onPress={() => handleInput(btn)}\r\n            >\r\n              <Text\r\n                style={[styles.textButton, { color: \"white\", fontSize: 28 }]}\r\n              >\r\n                {btn}\r\n              </Text>\r\n            </TouchableOpacity>\r\n          ) : btn === 0 ? (\r\n            <TouchableOpacity\r\n              key={btn}\r\n              style={[\r\n                styles.button,\r\n                {\r\n                  backgroundColor:\r\n                    typeof btn === \"number\"\r\n                      ? darkMode\r\n                        ? \"#303946\"\r\n                        : \"#fff\"\r\n                      : darkMode === true\r\n                      ? \"#414853\"\r\n                      : \"#ededed\",\r\n                  minWidth: \"36%\",\r\n                },\r\n              ]}\r\n              onPress={() => handleInput(btn)}\r\n            >\r\n              <Text style={styles.textButton}>{btn}</Text>\r\n            </TouchableOpacity>\r\n          ) : btn === \"B\" || btn === \"DEL\" ? (\r\n            <TouchableOpacity\r\n              key={btn}\r\n              style={[\r\n                styles.button,\r\n                {\r\n                  backgroundColor:\r\n                    btn === \".\"\r\n                      ? darkMode\r\n                        ? \"#303946\"\r\n                        : \"#fff\"\r\n                      : darkMode === true\r\n                      ? \"#414853\"\r\n                      : \"#ededed\",\r\n                  minWidth: \"37%\",\r\n                },\r\n              ]}\r\n              onPress={() => handleInput(btn)}\r\n            >\r\n              <Text style={styles.textButton}>{btn}</Text>\r\n            </TouchableOpacity>\r\n          ) : btn === \"C\" ? (\r\n            <TouchableOpacity\r\n              key={btn}\r\n              style={[\r\n                styles.button,\r\n                {\r\n                  backgroundColor:\r\n                    typeof btn === \"number\"\r\n                      ? darkMode\r\n                        ? \"#303946\"\r\n                        : \"#fff\"\r\n                      : darkMode === true\r\n                      ? \"#414853\"\r\n                      : \"#ededed\",\r\n                  minWidth: \"36%\",\r\n                },\r\n              ]}\r\n              onPress={() => handleInput(btn)}\r\n            >\r\n              <Text style={styles.textButton}>{btn}</Text>\r\n            </TouchableOpacity>\r\n          ) : (\r\n            <TouchableOpacity\r\n              key={btn}\r\n              style={[\r\n                styles.button,\r\n                {\r\n                  backgroundColor:\r\n                    typeof btn === \"number\"\r\n                      ? darkMode\r\n                        ? \"#303946\"\r\n                        : \"#fff\"\r\n                      : darkMode === true\r\n                      ? \"#414853\"\r\n                      : \"#ededed\",\r\n                },\r\n              ]}\r\n              onPress={() => handleInput(btn)}\r\n            >\r\n              <Text style={styles.textButton}>{btn}</Text>\r\n            </TouchableOpacity>\r\n          )\r\n        )}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default Calculator;\r\n"]},"metadata":{},"sourceType":"module"}