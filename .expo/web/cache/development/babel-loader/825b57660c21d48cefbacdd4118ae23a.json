{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ameed\\\\Desktop\\\\customtabbar-main\\\\App.js\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport \"react-native-gesture-handler\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { COLORS } from \"./Constant/Thems\";\nimport plus from \"./assets/plus.png\";\nimport minus from \"./assets/minus.png\";\nimport { FontAwesome5 } from \"@expo/vector-icons\";\nimport { useRef } from \"react\";\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  var _this = this;\n\n  var tabOffsetValue = useRef(new Animated.Value(0)).current;\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Navigator, {\n    tabBarOptions: {\n      showLabel: false,\n      style: {\n        backgroundColor: \"white\",\n        position: \"absolute\",\n        bottom: 40,\n        marginHorizontal: 20,\n        height: 60,\n        borderRadius: 10,\n        shadowColor: \"#000\",\n        shadowOpacity: 0.08,\n        shadowOffset: {\n          width: 10,\n          height: 10\n        },\n        paddingHorizontal: 20\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref) {\n        var focused = _ref.focused;\n        return React.createElement(View, {\n          style: {\n            position: \"absolute\",\n            top: 20\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }\n        }, React.createElement(FontAwesome5, {\n          name: \"home\",\n          size: 20,\n          color: focused ? \"red\" : \"gray\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }\n        }));\n      }\n    },\n    listeners: function listeners(_ref2) {\n      var navigation = _ref2.navigation,\n          route = _ref2.route;\n      return {\n        tabPress: function tabPress(e) {\n          Animated.spring(tabOffsetValue, {\n            toValue: 0,\n            useNativeDriver: true\n          }).start();\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Search\",\n    component: SearchScreen,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var focused = _ref3.focused;\n        return React.createElement(View, {\n          style: {\n            position: \"absolute\",\n            top: 20\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }\n        }, React.createElement(FontAwesome5, {\n          name: \"search\",\n          size: 20,\n          color: focused ? \"red\" : \"gray\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }\n        }));\n      }\n    },\n    listeners: function listeners(_ref4) {\n      var navigation = _ref4.navigation,\n          route = _ref4.route;\n      return {\n        tabPress: function tabPress(e) {\n          Animated.spring(tabOffsetValue, {\n            toValue: getWidth(),\n            useNativeDriver: true\n          }).start();\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"ActionButton\",\n    component: OutcomeScreen,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref5) {\n        var focused = _ref5.focused;\n        return React.createElement(View, {\n          style: {\n            width: 60,\n            height: 60,\n            backgroundColor: COLORS.ourThem,\n            borderRadius: 20,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            marginBottom: Platform.OS == \"android\" ? 75 : 45\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }\n        }, React.createElement(Image, {\n          source: minus,\n          style: {\n            width: 29,\n            height: 29,\n            tintColor: \"white\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 17\n          }\n        }));\n      }\n    },\n    l: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"ActionButton2\",\n    component: IncomeScreen,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref6) {\n        var focused = _ref6.focused;\n        return React.createElement(View, {\n          style: {\n            width: 60,\n            height: 60,\n            backgroundColor: \"red\",\n            borderRadius: 20,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            marginBottom: Platform.OS == \"android\" ? 75 : 45\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }\n        }, React.createElement(Image, {\n          source: plus,\n          style: {\n            width: 29,\n            height: 29,\n            tintColor: \"white\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 17\n          }\n        }));\n      }\n    },\n    l: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Notifications\",\n    component: NotificationScreen,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref7) {\n        var focused = _ref7.focused;\n        return React.createElement(View, {\n          style: {\n            position: \"absolute\",\n            top: 20\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }\n        }, React.createElement(FontAwesome5, {\n          name: \"bell\",\n          size: 20,\n          color: focused ? \"red\" : \"gray\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 17\n          }\n        }));\n      }\n    },\n    listeners: function listeners(_ref8) {\n      var navigation = _ref8.navigation,\n          route = _ref8.route;\n      return {\n        tabPress: function tabPress(e) {\n          Animated.spring(tabOffsetValue, {\n            toValue: getWidth() * 3,\n            useNativeDriver: true\n          }).start();\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Settings\",\n    component: SettingsScreen,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref9) {\n        var focused = _ref9.focused;\n        return React.createElement(View, {\n          style: {\n            position: \"absolute\",\n            top: 20\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }\n        }, React.createElement(FontAwesome5, {\n          name: \"user-alt\",\n          size: 20,\n          color: focused ? \"red\" : \"gray\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 17\n          }\n        }));\n      }\n    },\n    listeners: function listeners(_ref10) {\n      var navigation = _ref10.navigation,\n          route = _ref10.route;\n      return {\n        tabPress: function tabPress(e) {\n          Animated.spring(tabOffsetValue, {\n            toValue: getWidth() * 4,\n            useNativeDriver: true\n          }).start();\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }\n  })), React.createElement(Animated.View, {\n    style: {\n      width: getWidth() - 20,\n      height: 2,\n      backgroundColor: \"red\",\n      position: \"absolute\",\n      bottom: 98,\n      left: 50,\n      borderRadius: 20,\n      transform: [{\n        translateX: tabOffsetValue\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction getWidth() {\n  var width = Dimensions.get(\"window\").width;\n  width = width - 80;\n  return width / 5;\n}\n\nfunction OutcomeScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }\n  }, \" Outcome Screen\"));\n}\n\nfunction IncomeScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }\n  }, \" Income Screen\"));\n}\n\nfunction SettingsScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }\n  }, \"Settings!\"));\n}\n\nfunction HomeScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }\n  }, \"Home!\"));\n}\n\nfunction NotificationScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }\n  }, \"Notifications!\"));\n}\n\nfunction SearchScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }\n  }, \"Search!\"));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/ameed/Desktop/customtabbar-main/App.js"],"names":["StatusBar","React","NavigationContainer","createBottomTabNavigator","COLORS","plus","minus","FontAwesome5","useRef","Tab","App","tabOffsetValue","Animated","Value","current","showLabel","style","backgroundColor","position","bottom","marginHorizontal","height","borderRadius","shadowColor","shadowOpacity","shadowOffset","width","paddingHorizontal","HomeScreen","tabBarIcon","focused","top","navigation","route","tabPress","e","spring","toValue","useNativeDriver","start","SearchScreen","getWidth","OutcomeScreen","ourThem","justifyContent","alignItems","marginBottom","Platform","OS","tintColor","IncomeScreen","NotificationScreen","SettingsScreen","left","transform","translateX","Dimensions","get","flex","styles","StyleSheet","create","container"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport {\n  Animated,\n  Dimensions,\n  Image,\n  Platform,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport \"react-native-gesture-handler\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { COLORS } from \"./Constant/Thems\";\n\n// Plus...Minus\nimport plus from \"./assets/plus.png\";\nimport minus from \"./assets/minus.png\";\n\n// Font Awesome Icons...\nimport { FontAwesome5 } from \"@expo/vector-icons\";\nimport { useRef } from \"react\";\n\nconst Tab = createBottomTabNavigator();\n\n// Hiding Tab Names...\nexport default function App() {\n  // Animated Tab Indicator...\n  const tabOffsetValue = useRef(new Animated.Value(0)).current;\n  return (\n    <NavigationContainer>\n      <Tab.Navigator\n        tabBarOptions={{\n          showLabel: false,\n          // Floating Tab Bar...\n          style: {\n            backgroundColor: \"white\",\n            position: \"absolute\",\n            bottom: 40,\n            marginHorizontal: 20,\n            // Max Height...\n            height: 60,\n            borderRadius: 10,\n            // Shadow...\n            shadowColor: \"#000\",\n            shadowOpacity: 0.08,\n            shadowOffset: {\n              width: 10,\n              height: 10,\n            },\n            paddingHorizontal: 20,\n          },\n        }}\n      >\n        {\n          // Tab Screens....\n          // Tab ICons....\n        }\n        <Tab.Screen\n          name={\"Home\"}\n          component={HomeScreen}\n          options={{\n            tabBarIcon: ({ focused }) => (\n              <View\n                style={{\n                  // centring Tab Button...\n                  position: \"absolute\",\n                  top: 20,\n                }}\n              >\n                <FontAwesome5\n                  name=\"home\"\n                  size={20}\n                  color={focused ? \"red\" : \"gray\"}\n                ></FontAwesome5>\n              </View>\n            ),\n          }}\n          listeners={({ navigation, route }) => ({\n            // Onpress Update....\n            tabPress: (e) => {\n              Animated.spring(tabOffsetValue, {\n                toValue: 0,\n                useNativeDriver: true,\n              }).start();\n            },\n          })}\n        ></Tab.Screen>\n\n        <Tab.Screen\n          name={\"Search\"}\n          component={SearchScreen}\n          options={{\n            tabBarIcon: ({ focused }) => (\n              <View\n                style={{\n                  // centring Tab Button...\n                  position: \"absolute\",\n                  top: 20,\n                }}\n              >\n                <FontAwesome5\n                  name=\"search\"\n                  size={20}\n                  color={focused ? \"red\" : \"gray\"}\n                ></FontAwesome5>\n              </View>\n            ),\n          }}\n          listeners={({ navigation, route }) => ({\n            // Onpress Update....\n            tabPress: (e) => {\n              Animated.spring(tabOffsetValue, {\n                toValue: getWidth(),\n                useNativeDriver: true,\n              }).start();\n            },\n          })}\n        ></Tab.Screen>\n\n        {\n          // Extra Tab Screen For Action Button..\n        }\n\n        {\n          // Minus Screen (OUTTCOME)\n        }\n\n        <Tab.Screen\n          name={\"ActionButton\"}\n          component={OutcomeScreen}\n          options={{\n            tabBarIcon: ({ focused }) => (\n              <View\n                style={{\n                  width: 60,\n                  height: 60,\n                  backgroundColor: COLORS.ourThem,\n                  borderRadius: 20,\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  marginBottom: Platform.OS == \"android\" ? 75 : 45,\n                }}\n              >\n                <Image\n                  source={minus}\n                  style={{\n                    width: 29,\n                    height: 29,\n                    tintColor: \"white\",\n                  }}\n                ></Image>\n              </View>\n            ),\n          }}\n          l\n        ></Tab.Screen>\n\n        {\n          // Plus Screen (INTCOME)\n        }\n\n        <Tab.Screen\n          name={\"ActionButton2\"}\n          component={IncomeScreen}\n          options={{\n            tabBarIcon: ({ focused }) => (\n              <View\n                style={{\n                  width: 60,\n                  height: 60,\n                  backgroundColor: \"red\",\n                  borderRadius: 20,\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  marginBottom: Platform.OS == \"android\" ? 75 : 45,\n                }}\n              >\n                <Image\n                  source={plus}\n                  style={{\n                    width: 29,\n                    height: 29,\n                    tintColor: \"white\",\n                  }}\n                ></Image>\n              </View>\n            ),\n          }}\n          l\n        ></Tab.Screen>\n\n        <Tab.Screen\n          name={\"Notifications\"}\n          component={NotificationScreen}\n          options={{\n            tabBarIcon: ({ focused }) => (\n              <View\n                style={{\n                  // centring Tab Button...\n                  position: \"absolute\",\n                  top: 20,\n                }}\n              >\n                <FontAwesome5\n                  name=\"bell\"\n                  size={20}\n                  color={focused ? \"red\" : \"gray\"}\n                ></FontAwesome5>\n              </View>\n            ),\n          }}\n          listeners={({ navigation, route }) => ({\n            // Onpress Update....\n            tabPress: (e) => {\n              Animated.spring(tabOffsetValue, {\n                toValue: getWidth() * 3,\n                useNativeDriver: true,\n              }).start();\n            },\n          })}\n        ></Tab.Screen>\n\n        <Tab.Screen\n          name={\"Settings\"}\n          component={SettingsScreen}\n          options={{\n            tabBarIcon: ({ focused }) => (\n              <View\n                style={{\n                  // centring Tab Button...\n                  position: \"absolute\",\n                  top: 20,\n                }}\n              >\n                <FontAwesome5\n                  name=\"user-alt\"\n                  size={20}\n                  color={focused ? \"red\" : \"gray\"}\n                ></FontAwesome5>\n              </View>\n            ),\n          }}\n          listeners={({ navigation, route }) => ({\n            // Onpress Update....\n            tabPress: (e) => {\n              Animated.spring(tabOffsetValue, {\n                toValue: getWidth() * 4,\n                useNativeDriver: true,\n              }).start();\n            },\n          })}\n        ></Tab.Screen>\n      </Tab.Navigator>\n\n      <Animated.View\n        style={{\n          width: getWidth() - 20,\n          height: 2,\n          backgroundColor: \"red\",\n          position: \"absolute\",\n          bottom: 98,\n          // Horizontal Padding = 20...\n          left: 50,\n          borderRadius: 20,\n          transform: [{ translateX: tabOffsetValue }],\n        }}\n      ></Animated.View>\n    </NavigationContainer>\n  );\n}\n\nfunction getWidth() {\n  let width = Dimensions.get(\"window\").width;\n\n  // Horizontal Padding = 20...\n  width = width - 80;\n\n  // Total five Tabs...\n  return width / 5;\n}\n\nfunction OutcomeScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n      <Text> Outcome Screen</Text>\n    </View>\n  );\n}\nfunction IncomeScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n      <Text> Income Screen</Text>\n    </View>\n  );\n}\n\nfunction SettingsScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n      <Text>Settings!</Text>\n    </View>\n  );\n}\n\nfunction HomeScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n      <Text>Home!</Text>\n    </View>\n  );\n}\n\nfunction NotificationScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n      <Text>Notifications!</Text>\n    </View>\n  );\n}\n\nfunction SearchScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n      <Text>Search!</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}